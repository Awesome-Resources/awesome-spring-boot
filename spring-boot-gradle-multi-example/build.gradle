buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}

	repositories {
        jcenter()
    }
    
    dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

def vJavaLang = '1.8'
def javaProject = [project(':common'), project(':domain'), project(':api'), project(':admin')]
def webProject = [project(':api'), project(':admin')]

println GradleVersion.current()
println "System JVM Location = " + System.getProperty("java.home")
println "Project JVM Version = ${vJavaLang}"

configure(allprojects) {
    apply plugin: 'eclipse'

    eclipse {  	
		project.natures "org.springsource.ide.eclipse.gradle.core.nature"
	    classpath {
	         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
	         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	    }
	}	
}

configure(javaProject) {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
    
    sourceCompatibility = vJavaLang
	targetCompatibility = vJavaLang

	repositories {
		jcenter()
	}
}

configure(webProject) {
	apply plugin: 'war'

	configurations {
		crosstest
		testCompile.extendsFrom crosstest
	}
	
	dependencies {
		testCompile ('org.springframework.boot:spring-boot-starter-test')
   	    crosstest project(':domain').sourceSets.test.output
	}
	
	eclipse {
		classpath {
        	minusConfigurations += [ configurations.crosstest ]
        }	
	}	
}